for iteration = 1:10
im = double(imread("panda.jpg")) / 255;
cutoff = 0.01

m=2;
data = reshape(im, [], 3);
n_centers = 4;

[centers_truth,U_truth] = chatgpt_fuzzy_c(data, n_centers, m);

noisy_im1 = imnoise(im,'speckle',0.025);
data1 = reshape(noisy_im1, [], 3);

options = fcmOptions(NumClusters=n_centers);

[centers1,U1] = chatgpt_fuzzy_c(data1, n_centers, m);

mapping = zeros(n_centers,1);
for i = 1:n_centers
    best_distance = [100000, 0];
    for j = 1:n_centers
        if ismember(j,mapping)
            continue
        end
        if norm(centers1(i,:) - centers2(j,:)) < best_distance(1)
           best_distance = [norm(centers1(i,:) - centers2(j,:)), j];
        end
    end
    mapping(i) = best_distance(2);
end

%%
avg_distance_end(iteration) = fuzzy_c_cost(data, centers2,)

end
mean_val = mean(avg_distance_end)
var_val = var(avg_distance_end)